<html py:extends="master.xhtml" py:strip="True">
<head py:block="head" py:strip="True">
  <title py:block="master_title">KS | Output</title>
  <script src="${tg.url('/javascript/ckeditor/ckeditor.js')}"></script>

  <script id="OutputForm_template" type="text/html">
    <![CDATA[
    <form class="form-horizontal" on-submit="submit-form">
      <div class="form-group" style="padding-top: 20px">
        <div class="col-md-6 text-left ks-section-name">
          Output
        </div>
        <div class="col-md-6 text-right">
          {{#if saving}}
          Saving...
          {{else}}
          <button type="submit" class="btn btn-primary">${h.material_icon('save')} Save</button>
          {{/if}}
        </div>
      </div>
      <hr/>
      <div class="row">
        <div class="col-md-12">
          <div class="form-group {{errors.title ? 'has-error' : ''}}">
            <div class="col-md-6">
              <input id="form-title" type="text" class="form-control" placeholder="Label" value="{{create.title}}"/>
              {{#if errors.title}}
              <span class="help-block">{{errors.title}}</span>
              {{/if}}
            </div>
          </div>
          <div class="form-group {{errors.category ? 'has-error' : ''}}">
            <div class="col-md-6">
              <select id="form-category" class="form-control" value="{{create.category}}">
              {{#each categories}}
                {{#if .name == 'Altro'}}
                  <option value="{{._id}}" selected>{{.name}}</option>
                {{else}}
                  <option value="{{._id}}">{{.name}}</option>
                {{/if}}
              {{/each}}
              </select>

              {{#if errors.category}}
              <span class="help-block">{{errors.category}}</span>
              {{/if}}
            </div>
          </div>
          <div class="form-group {{errors.precondition ? 'has-error' : ''}}">
            <div class="col-md-6">
              <select id="form-precondition" class="form-control" value="{{create.precondition}}">
                <option value="" disabled selected>Choose a filter</option>
                {{#each preconditions}}
                <option value="{{._id}}">{{.title}}</option>
                {{/each}}
              </select>

              {{#if errors.precondition}}
              <span class="help-block">{{errors.precondition}}</span>
              {{/if}}
            </div>
          </div>
          <div class="form-group">
            <div class="col-md-6">
              Available answers
                {{#each qas}}
                <div class="row">
                  <div class="col-md-6">
                    <span id="add_circle_outline" onclick='ractive_output.addResponseOf("{{._id}}", "{{.title}}")' class="cursor-pointer">${h.material_icon('add_circle_outline')}</span>
                    {{.title}}
                  </div>
                </div>
                {{/each}}
            </div>
          </div>
          <div class="form-group">
            <textarea name="editor_ks_1"></textarea>
          </div>

          <!--?<div class="form-group {{errors.content ? 'has-error' : ''}}">-->
            <!--?{{#create.content:i}}-->
               <!--?{{#if .type == 'text'}}-->
              <!--?<span class="editor-element-text">-->
                    <!--?<span class="editor-text-simple" contenteditable="true" value="{{.content}}" on-click="selectElem:{{.}}"></span>-->
                   <!--?<span id="delete_elem" class="cursor-pointer" on-click="deleteElem:{{i}}">${h.material_icon('add_circle_outline_rotate')}</span>-->
              <!--?</span>-->
                  <!--?{{/if}}-->

                  <!--?{{#if .type == 'qa_response'}}-->
              <!--?<span class="editor-element-answer">-->
                  <!--?<span on-click="showQaDetails:{{.}}">{{.title}}</span>-->
                  <!--?<span id="delete_elem" class="cursor-pointer" on-click="deleteElem:{{i}}">${h.material_icon('add_circle_outline_rotate')}</span>-->
              <!--?</span>-->
               <!--?{{/if}}-->

                <!--?{{#if .type == 'output'}}-->
              <!--?<span class="editor-element-output">-->
                  <!--?<span on-click="showQaDetails:{{.}}">{{.title}}</span>-->
                  <!--?<span id="delete_elem" class="cursor-pointer" on-click="deleteElem:{{i}}">${h.material_icon('add_circle_outline_rotate')}</span>-->
              <!--?</span>-->
               <!--?{{/if}}-->
            <!--?{{/items}}-->

            <!--?{{#if errors.content}}-->
            <!--?<span class="help-block">{{errors.content}}</span>-->
            <!--?{{/if}}-->
          <!--?</div>-->

        </div>
      </div>
    </form>
    ]]>
  </script>
</head>

<body py:block="body" py:strip="True">
<div id="output-ractive" style="padding-top: 20px">

</div>
<script>
  <![CDATA[
  var OutputEditor = Ractive.extend({
    template: '#OutputForm_template',
    onconstruct: function(options) {
      var self = this;
      //  Default settings
      self.submit_type = 'POST';
      self.submit_url = '${tg.url('/output/post')}';
      self.edit_mode=false;
      self.output = options['output'];

    },
    oninit: function() {
      var self = this;

      self.set('qas', []);
      self.set('create.content', []);

      //  Check if document is provided
      if (! jQuery.isEmptyObject(self.output)) {
        self.edit_mode = true;
        self.submit_type = 'PUT';
        self.submit_url = '${tg.url('/output/put')}';

        //Set the output value as default
        self.set('create.title', self.output['title']);
        self.set('create.category', self.output['_category']);
        self.set('create.precondition', self.output['_precondition']);
        self.set('create._id', self.output['_id']);
        self.set('create.content', self.output['content']);
      }

      self.set('errors', {});
      self.set('saving', false);

      self.on('submit-form', function(event) {
        console.log(self.get('create'));
        self.create_output(self.get('create'));
        return false;
      });

      self.loadCategories();
      self.loadPrecondition();
    },
    loadCategories: function(callback) {
      var self = this;
      jQuery.get("${tg.url('/category/get_all')}",
          function(data) {
            self.set('categories', data['categories']);
            if (callback)
              callback();
          });
    },
    loadPrecondition: function(callback) {
      var self = this;
      jQuery.get("${tg.url('/precondition/available_preconditions')}",
          function(data) {
            self.set('preconditions', data['preconditions']);
            if (callback)
              callback();
          });
    },
    addResponseOf: function(id, title) {

      var ks_id = 'ks_id-qa_' + id;
      var class_ = 'objplaceholder qa-widget ' + ks_id;
      var template_ = "<span class='" + class_ + "'>" + title + "</span>";

      CKEDITOR.instances.editor_ks_1.insertHtml(template_, function (){});
      CKEDITOR.instances.editor_ks_1.getSelection().removeAllRanges();

    },
      addOutput:function (id, title) {
         console.log("add _id:" + id);
         console.log("add title:" + title);
         var ks_id = 'ks_id-output_' + id;
         var class_ = 'objplaceholder output-widget ' + ks_id;
         var template_ = "<span class='" + class_ + "'>" + title + "</span>";

        CKEDITOR.instances.editor_ks_1.insertHtml(template_, function (){});
        CKEDITOR.instances.editor_ks_1.getSelection().removeAllRanges();
      },
    create_output: function(field) {
      var self = this;
      self.set('saving', true);
      console.log("JSON.stringify");
      console.log(JSON.stringify(field));

      field['editor_ks_1'] = CKEDITOR.instances.editor_ks_1.getData();

      var api_params = JSON.stringify(field);

      $.ajax({
        type: self.submit_type,
        url: self.submit_url,
        data: api_params,
        dataType: "json",
        processData: false,
        contentType: 'application/json'
      }).done(function(resp) {
        var redirect_to = "${tg.url('/output/')}";
        self.set('create', {});
        self.set('saving', false);
        self.set('editing', false);
        if (resp.redirect_url)
          redirect_to = resp.redirect_url;
        window.location.replace(redirect_to);
      }).fail(function(jqXHR) {
        var data = jQuery.parseJSON(jqXHR.responseText);
        console.log("fail");
        console.log(data);
        self.set('errors', data.errors);
        self.set('saving', false);
      });
    }
  });
  ]]>

</script>
<script>
  var ractive_output = new OutputEditor({
    el: '#output-ractive',
    output: ${Markup(h.script_json_encode(output))},
  });
  ractive_output.on('deleteElem', function ( event, elem ) {
    var self = this;
    console.log("Element to remove: "+ elem);
    self.splice('create.content', elem, 1)
  });

  ractive_output.on('showQaDetails', function(event, elem) {
    var self = this;
    var qas = self.get('qas');
    alert(JSON.stringify(qas[elem['content']], null, 2));
  });

  ractive_output.observe('create.precondition', function ( precond_value ) {
    var self = this;
    //Load precondition elements
    $.get( "${tg.url('/precondition/qa_precondition', qualified=True)}",{ id: precond_value}, function(data) {
      self.set('qas', data['qas']);
    });
  });


</script>
<script>
  CKEDITOR.replace( 'editor_ks_1', {
    extraPlugins: 'objplaceholder'
  });

  CKEDITOR.instances.editor_ks_1.setData(${Markup(h.script_json_encode(output.upcast if output else '' ))});

</script>
</body>
</html>
