<html py:extends="master.xhtml" py:strip="True">
<head py:block="head" py:strip="True">
    <title py:block="master_title">KS | Nuovo Output</title>

    <script id="OutputForm_template" type="text/html">
        <![CDATA[
        <fodwdrm class="form-horizontal" on-submit="submit-form">
            <div class="form-group" style="padding-top: 20px">
                <div class="col-md-6 text-left ks-section-name">
                    Crea Output
                </div>
                <div class="col-md-6 text-right">
                    {{#if saving}}
                    Salvataggio...
                    {{else}}
                    <button type="submit" class="btn btn-primary">${h.material_icon('save')} Salva</button>
                    {{/if}}
                </div>
            </div>
            <hr/>
            <div class="form-group {{errors.title ? 'has-error' : ''}}">
                <div class="col-sm-3">
                    <input id="form-title" type="text" class="form-control" placeholder="Titolo" value="{{create.title}}"/>
                    {{#if errors.title}}
                    <span class="help-block">{{errors.title}}</span>
                    {{/if}}
                </div>
            </div>
            <div class="form-group {{errors.category ? 'has-error' : ''}}">
                <div class="col-sm-3">
                    <select id="form-category" class="form-control" value="{{create.category}}">
                        <option value="" disabled selected hidden>Seleziona una categoria</option>
                        {{#each categories}}
                        <option value="{{._id}}">{{.name}}</option>
                        {{/each}}
                    </select>

                    {{#if errors.category}}
                    <span class="help-block">{{errors.category}}</span>
                    {{/if}}
                </div>
            </div>
            <div class="form-group {{errors.precondition ? 'has-error' : ''}}">
                <div class="col-sm-3">
                    <select id="form-precondition" class="form-control" value="{{create.precondition}}">
                        <option value="" disabled selected hidden>Seleziona una precondizione</option>
                        {{#each preconditions}}
                        <option value="{{._id}}">{{.title}}</option>
                        {{/each}}
                    </select>

                    {{#if errors.precondition}}
                    <span class="help-block">{{errors.precondition}}</span>
                    {{/if}}
                </div>
            </div>
            <div class="form-group {{errors.content ? 'has-error' : ''}}">
                <div class="col-sm-3">
                      <textarea class="form-control" rows="5" id="form-content" value="{{create.content}}"></textarea>
                    {{#if errors.content}}
                    <span class="help-block">{{errors.content}}</span>
                    {{/if}}
                </div>
            </div>
        </fodwdrm>
    ]]>
    </script>
</head>

<body py:block="body" py:strip="True">
<div id="output-ractive" style="padding-top: 20px">

</div>
<script>
    var OutputEditor = Ractive.extend({
        template: '#OutputForm_template',
        onconstruct: function(options) {
            var self = this;
            self.fieldset = options['fieldset'];
        },
        oninit: function() {
            var self = this;
            self.set('errors', {});
            self.set('saving', false);

            self.on('submit-form', function(event) {
                var all_var = self.get('create');
                console.log(all_var);
                self.create_output(all_var);
                return false;
            });

            self.loadCategories();
            self.loadPrecondition();
        },
        loadCategories: function(callback) {
            var self = this;
            jQuery.get("${tg.url('/available_categories')}",
                    function(data) {
                        self.set('categories', data['categories']);
                        if (callback)
                            callback();
                    });
        },
        loadPrecondition: function(callback) {
            var self = this;
            jQuery.get("${tg.url('/available_preconditions')}",
                    function(data) {
                        self.set('preconditions', data['preconditions']);
                        if (callback)
                            callback();
                    });
        },
        /*
        switchResponseType: function(section) {
            var self = this;
            if(section == 'single')
                self.set('input_type', 'radio');
            if(section == 'multi')
                self.set('input_type', 'checkbox');

            jQuery("#insert_answer").empty();

            self.set('answer_type', section);
            self.set('available_reponse', []);
        },
        addResponse: function() {
            var self = this;
            jQuery("#insert_answer").empty();
            var resp = jQuery("#response_text").val();
            if(!resp || 0 === resp.length || /^\s*$/.test(resp)) {
                alert("Risposta non valida");
                return;
            }
            jQuery("#response_text").val("");
            self.push('available_reponse', resp);
        },
        */

        create_output: function(field) {
            var self = this;
            self.set('saving', true);
            console.log("JSON.stringify");
            console.log(JSON.stringify(field));

            var api_params = JSON.stringify(field);

            $.ajax({
                type: "post",
                url: "${tg.url('/output/post')}",
                data: api_params,
                dataType: "json",
                processData: false,
                contentType: 'application/json'
            }).done(function(data) {
                self.set('create', {});
                self.set('saving', false);
                self.set('editing', false);
                window.location.replace("${tg.url('/output/')}");
            }).fail(function(jqXHR) {
                var data = jQuery.parseJSON(jqXHR.responseText);
                console.log("fail");
                console.log(data);
                self.set('errors', data.errors);
                self.set('saving', false);
            });
        }
    });
</script>
<script>
    var ractive_output = new OutputEditor({fieldset: 'output', el: '#output-ractive'});
</script>
</body>
</html>
