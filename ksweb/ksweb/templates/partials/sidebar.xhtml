<div class="sidebar-default" py:with="sidebar_section = getattr(tmpl_context, 'sidebar_section', '')">
    <div class="row">
        <a class="category-name" href="${tg.url('/')}">
            <div class="col-md-11 ws">
             ${h.get_workspace_name(workspace)}
                 <hr class="category-name-separator"/>
            </div>
        </a>
        <div class="col-md-1"></div>
    </div>
    <div class="row sidebar-item" style="padding-top: 31px">
        <a href="${tg.url('/qa', params=dict(workspace=workspace))}">
            <div class="col-md-11 ${('', 'sidebar_active')[sidebar_section == 'qas']}">
            ${h.material_icon('view_list')} Q/A
            </div>
        </a>
        <div class="col-md-1"></div>
    </div>
    <div class="row sidebar-item">
        <a href="${tg.url('/output', params=dict(workspace=workspace))}">
            <div class="col-md-11 ${('', 'sidebar_active')[sidebar_section == 'outputs']}">
            ${h.material_icon('flip_to_front')} OUTPUTS
            </div>
        </a>
        <div class="col-md-1"></div>
    </div>
    <div class="row sidebar-item">
        <a href="${tg.url('/precondition',params=dict(workspace=workspace))}">
            <div class="col-md-11 ${('', 'sidebar_active')[sidebar_section == 'preconditions']}">
            ${h.material_icon('group_work')} FILTERS
            </div>
        </a>
        <div class="col-md-2"></div>
    </div>
    <div class="row sidebar-item">
        <a href="${tg.url('/document', params=dict(workspace=workspace))}">
            <div class="col-md-11 ${('', 'sidebar_active')[sidebar_section == 'documents']}">
            ${h.material_icon('insert_drive_file')} DOCUMENTS
            </div>
        </a>
        <div class="col-md-1"></div>
    </div>
    <div class="row sidebar-item">
        <a href="${tg.url('/questionary',params=dict(workspace=workspace))}">
            <div class="col-md-11 ${('', 'sidebar_active')[sidebar_section == 'questionaries']}">
            ${h.material_icon('content_paste')} QUESTIONARIES
            </div>
        </a>
        <div class="col-md-1"></div>
    </div>



    <div py:if="getattr(tmpl_context, 'sidebar_precondition_advanced', '') == 'preconditions-advanced'" id="precondition-ractive" class="row" style="padding-top: 50%;">

    </div>
    <!-- Precondition Advanced -->
    <script id="PreconditionSimpleList" type="text/html">
        <![CDATA[
        <div class="col-md-12">
            Filtri
        </div>
        {{#each preconditions}}
        <div class="col-md-12 category-name">
            {{.category_name}}
            <hr class="category-name-separator">
        </div>

        {{#each precondition}}
        <div class="col-md-12">
            {{.title}}
            <span id="add_circle_outline" onclick="ractive_precondition_simple.addPrecondition('{{._id}}', {{JSON.stringify(.title)}})" class="cursor-pointer">${h.material_icon('add_circle_outline')}</span>
        </div>
        {{/each}}
        {{/each}}
        ]]>
    </script>
    <script>
        var PreconditionSimpleList = Ractive.extend({
            template: '#PreconditionSimpleList',
            onconstruct: function(options) {
                var self = this;
            },
            oninit: function() {
                var self = this;
                self.set('errors', {});
                self.set('saving', false);
                self.set('preconditions', []);
                self.set('categories', []);

                self.loadPreconditions();
                self.loadCategory();

            },
            loadPreconditions: function(callback) {
                var self = this;
                jQuery.get("${tg.url('/precondition/sidebar_precondition', params=dict(workspace=workspace))}",
                        function(data) {
                            console.log('load_precoditions', data)
                            self.set('preconditions', data['precond']);
                            console.log(self.get('preconditions'));
                            if (callback)
                                callback();
                        });
            },
            loadCategory: function(callback) {
                var self = this;
                jQuery.get("${tg.url('/category/get_all')}",
                        function(data) {
                            self.set('categories', data['categories']);
                            if (callback)
                                callback();
                        });
            }
        });
    </script>

    <!-- End Precondition -->


    <div py:if="getattr(tmpl_context, 'sidebar_document', '') == 'document-new'" id="output-ractive" class="row" style="padding-top: 50%;">

    </div>


    <div py:if="getattr(tmpl_context, 'sidebar_output', '') == 'output-new'" id="nested-output-ractive" class="row" style="padding-top: 50%;">

    </div>

    <div py:if="getattr(tmpl_context, 'sidebar_output', '') == 'output-edit'" id="nested-output-ractive" class="row" style="padding-top: 50%;">

    </div>

    <!-- Output -->
    <script id="OutputList" type="text/html">
        <![CDATA[
        <div class="col-md-12">
            Output
        </div>
        {{#each outputs}}
        <div class="col-md-12 category-name">
            {{.category_name}}
            <hr class="category-name-separator">
        </div>

        {{#each output}}
        <div class="col-md-12">
            {{.title}}
            {{#if div == '#output-ractive'}}
            <span id="add_circle_outline" onclick="ractive_document.add_widget_to_editor('{{._id}}', {{JSON.stringify(.title)}}, 'output')" class="cursor-pointer">${h.material_icon('add_circle_outline')}</span>
            {{else}}
            <span id="add_circle_outline" onclick="ractive_output.add_widget_to_editor('{{._id}}', {{JSON.stringify(.title)}}, 'output')" class="cursor-pointer">${h.material_icon('add_circle_outline')}</span>
            {{/if}}
        </div>
        {{/each}}
        {{/each}}
        ]]>
    </script>

    <script>
        var OutputList = Ractive.extend({
            template: '#OutputList',
            onconstruct: function() {
                var self = this;
            },
            oninit: function() {
                var self = this;
                self.set('errors', {});
                self.set('saving', false);
                self.set('outputs', []);
                self.set('categories', []);

                self.loadOutputs();
                self.loadCategory();
                self.set('div',self.el);


            },
            loadOutputs: function(callback) {
                var self = this;
                jQuery.get("${tg.url('/output/sidebar_output',params=dict(_id=getattr(tmpl_context, 'id_obj', None), workspace=workspace))}",
                        function(data) {
                            self.set('outputs', data['outputs']);
                            if (callback)
                                callback();
                        });
            },
            loadCategory: function(callback) {
                var self = this;
                jQuery.get("${tg.url('/category/get_all')}",
                        function(data) {
                            self.set('categories', data['categories']);
                            if (callback)
                                callback();
                        });
            }
        });
    </script>

    <!-- End Output  -->

    <script>
        var ractive_precondition_simple_list = new PreconditionSimpleList({el: '#precondition-ractive'});
        var ractive_output_list = new OutputList({el: '#output-ractive'});
        var ractive_nested_output_list = new OutputList({el: '#nested-output-ractive'});
    </script>

</div>
