<div class="sidebar-sticky"
     py:with="sidebar_section = getattr(tmpl_context, 'sidebar_section', '')">

    <h6 class="sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1">
        <a class="d-flex align-items-center text-secondary" href="${tg.url('/')}">
            ${h.material_icon('arrow_back')} ${h.get_workspace_name(workspace)}
        </a>
    </h6>
    <br/>
    <ul class="nav flex-column mb-2">
        <li class="nav-item ${('', 'sidebar-active')[sidebar_section == 'qas']}">
            <a href="${tg.url('/qa', params=dict(workspace=workspace))}" class="nav-link">
                ${h.material_icon('question_answer')} Q/A
            </a>
        </li>

        <li class="nav-item ${('', 'sidebar-active')[sidebar_section == 'preconditions']}">
            <a href="${tg.url('/precondition',params=dict(workspace=workspace))}" class="nav-link">
                ${h.material_icon('low_priority')} FILTERS <span class="ml-2 badge badge-primary">${unread_filters}</span>
            </a>
        </li>

        <li class="nav-item ${('', 'sidebar-active')[sidebar_section == 'outputs']}">
            <a href="${tg.url('/output', params=dict(workspace=workspace))}" class="nav-link">
                ${h.material_icon('view_day')} OUTPUTS <span class="ml-2 badge badge-primary">${unread_outputs}</span>
            </a>
        </li>

        <li class="nav-item ${('', 'sidebar-active')[sidebar_section == 'documents']}">
            <a href="${tg.url('/document', params=dict(workspace=workspace))}" class="nav-link">
                ${h.material_icon('insert_drive_file')} DOCUMENTS <span class="ml-2 badge badge-primary">${unread_documents}</span>
            </a>
        </li>

        <li class="nav-item ${('', 'sidebar-active')[sidebar_section == 'questionaries']}">
            <a href="${tg.url('/questionary',params=dict(workspace=workspace))}" class="nav-link">
                ${h.material_icon('content_paste')} FORMS
            </a>
        </li>
    </ul>

    <div id="precondition-ractive" class="row p-2" py:if="getattr(tmpl_context, 'sidebar_precondition_advanced', '') == 'preconditions-advanced'"/>

    <!-- Precondition Advanced -->
    <script id="filtersTemplate" type="text/html">
        <![CDATA[
        <div class="col-md-12">
            ${_('Filters')}
        </div>
        {{#each preconditions}}
            <div class="col-md-12 category-name">
                {{.category_name}}
                <hr class="category-name-separator">
            </div>

            {{#each precondition}}
            <div class="col-md-12">
                <span id="{{._id}}"
                      onclick="ractive_precondition_simple.addPrecondition('{{._id}}', {{JSON.stringify(.title)}})"
                      class="add_circle_outline cursor-pointer">${h.material_icon('add_circle_outline')}</span>
                {{{.title}}}
            </div>
            {{/each}}
        {{/each}}
        ]]>
    </script>

    <script>
        const FilterSimpleList = Ractive.extend({
            template: '#filtersTemplate',
            onconstruct: function(options) {},
            oninit:function() {
                const self = this
                self.set('errors', {})
                self.set('saving', false)
                self.set('preconditions', [])
                self.set('categories', [])
                self.set_filters()
            },

            set_filters: function() {
                const self = this
                jQuery.get("${tg.url('/precondition/sidebar_precondition', params=dict(workspace=workspace))}",
                    data => {self.set('preconditions', data['precond'])}
                )
            },
        })
    </script>

    <div py:if="getattr(tmpl_context, 'sidebar_document', '') == 'document-new'"
         id="output-ractive" class="row p-2">
    </div>

    <div py:if="getattr(tmpl_context, 'sidebar_output', '') == 'output-new'"
         id="nested-output-ractive" class="row p-2">
    </div>

    <div py:if="getattr(tmpl_context, 'sidebar_output', '') == 'output-edit'"
         id="nested-output-ractive" class="row p-2">
    </div>

    <!-- Output -->
    <script id="OutputList" type="text/html">
        <![CDATA[
        <div class="col-md-12 category-name">
            Output
            <hr class="category-name-separator">
        </div>
        {{#each outputs}}
            {{#each output}}
            <div class="col-md-12">
                {{#if div == '#output-ractive'}}
                    <a id="{{._id}}"
                          onclick="ractive_document.add_widget_to_editor('{{._id}}')"
                          class="add_circle_outline cursor-pointer">
                            ${h.material_icon('add_circle_outline')}
                            <span>{{{.title}}}</span>
                    </a>
                {{else}}
                    <span id="add_circle_outline"
                          onclick="ractive_output.add_widget_to_editor('{{._id}}')"
                          class="cursor-pointer">${h.material_icon('add_circle_outline')}</span>
                {{/if}}
                
            </div>
            {{/each}}
        {{/each}}
        ]]>
    </script>

    <script>
        var OutputList = Ractive.extend({
            template: '#OutputList',
            oninit: function () {
                const self = this;
                self.set('errors', {});
                self.set('saving', false);
                self.set('outputs', []);
                self.set_outputs();
                self.set('div', self.el);
            },
            set_outputs: function(callback) {
                const self = this
                let url = "${tg.url('/output/sidebar_output',params=dict(_id=getattr(tmpl_context, 'id_obj', None), workspace=workspace))}"
                jQuery.get(url,
                    data => { self.set('outputs', data['outputs']) }
                )
            },
        });
    </script>

    <!-- End Output  -->

    <script>
        const ractive_precondition_simple_list = new FilterSimpleList({target: '#precondition-ractive'})
        const ractive_output_list = new OutputList({target: '#output-ractive'})
        const ractive_nested_output_list = new OutputList({target: '#nested-output-ractive'})
    </script>

</div>
