<html py:extends="master.xhtml" py:strip="True">
    <head py:block="head" py:strip="True">
        <title py:block="master_title">New QA</title>
        <style>

            label > input{ /*HIDE RADIO*/
              display:none;
            }
            label > input + img{  /*IMAGE STYLES*/
              cursor:pointer;
              border:2px solid transparent;
            }
            label > input:checked + img{  /*(CHECKED) IMAGE STYLES*/
              border:2px solid blue;
            }

        </style>
        <!--<script id="QAForm_template" type="text/ractive">-->
        <script id="QAForm_template" type="text/html">
        <![CDATA[
        <div class="extra-fields-add-form">
            <form class="form-horizontal" on-submit="submit-form">
              <div class="form-group {{errors.title ? 'has-error' : ''}}">
                <div class="col-sm-3">
                    <input id="extra-fields-form-title" type="text" class="form-control" placeholder="TITLE" value="{{create.title}}"/>
                    {{#if errors.title}}
                        <span class="help-block">{{errors.title}}</span>
                    {{/if}}
                </div>
              </div>
              <div class="form-group {{errors.category ? 'has-error' : ''}}">
                <div class="col-sm-3">
                    <select id="extra-fields-form-category" class="form-control" value="{{create.category}}">
                        <option value="" disabled selected hidden>Select Category</option>
                        {{#each categories}}
                            <option value="{{._id}}">{{.name}}</option>
                         {{/each}}
                    </select>

                    {{#if errors.category}}
                        <span class="help-block">{{errors.category}}</span>
                    {{/if}}
                </div>
              </div>
              <div class="form-group {{errors.title ? 'has-error' : ''}}">
                <div class="col-sm-3">
                    <input id="extra-fields-form-title" type="text" class="form-control" placeholder="Text" value="{{create.title}}"/>
                    {{#if errors.title}}
                        <span class="help-block">{{errors.title}}</span>
                    {{/if}}
                </div>
              </div>
              <div class="form-group {{errors.tooltip ? 'has-error' : ''}}">
                <div class="col-sm-3">
                    <input id="extra-fields-form-tooltip" type="text" class="form-control" placeholder="Tooltip" value="{{create.tooltip}}"/>
                    {{#if errors.tooltip}}
                        <span class="help-block">{{errors.tooltip}}</span>
                    {{/if}}
                </div>
              </div>
              <div class="form-group {{errors.link ? 'has-error' : ''}}">
                <div class="col-sm-3">
                    <input id="extra-fields-form-link" type="text" class="form-control" placeholder="Link" value="{{create.link}}"/>
                    {{#if errors.link}}
                        <span class="help-block">{{errors.link}}</span>
                    {{/if}}
                </div>
              </div>
              <div class="row">
                  <div class="col-md-12">
                      Type of Answer
                  </div>
                  <div class="col-md-10 col-md-offset-1">
                      <label>
                        <input type="radio" name="response_type" value="single" onclick="ractive_qa.switchResponseType('single');" />
                        <img src="${tg.url('/img/radio_single.png')}"  alt="Single"/>
                      </label>
                      <label>
                        <input type="radio" name="response_type" value="multi" onclick="ractive_qa.switchResponseType('multi');" />
                        <img src="${tg.url('/img/radio_multi.png')}"  alt="Multi"/>
                      </label>
                      <label>
                        <input type="radio" name="response_type" value="text" onclick="ractive_qa.switchResponseType('text');" />
                        <img src="${tg.url('/img/radio_text.png')}"  alt="Text"/>
                      </label>
                  </div>
              </div>
              <div class="row">
                  {{#if response_type == 'single' || response_type == 'multi'}}
                  <div class="col-md-12" id="response">
                      {{#each available_reponse}}
                        <div class="col-md-12"><input type="{{input_type}}" name="example_response"> {{.}}</div>
                      {{/each}}
                  </div>
                  <div class="col-md-12">
                      <span onclick="ractive_qa.addResponse()">${h.material_icon('add_circle_outline')}</span> <input id="response_text" type="text" placeholder="Answer"/>
                  </div>
                  {{/if}}
                  {{#if response_type == 'text'}}
                  <div class="col-md-12">
                      Risposta di tipo testo
                  </div>
                  {{/if}}
              </div>


              <div class="form-group">
                <div class="col-sm-10 col-sm-offset-2">
                    {{#if saving}}
                        Saving...
                    {{else}}
                        <button type="submit" class="btn btn-default">Aggiungi</button>
                    {{/if}}
                </div>
              </div>
            </form>
        </div>
        ]]>
    </script>
    </head>

    <body py:block="body" py:strip="True">
      <div class="row" style="padding-top: 20px">
        <div class="col-md-6 text-left ks-section-name">
            Create Q / A
        </div>
        <div class="col-md-6 text-right">
          <a href="${tg.url('/qa/new')}">
            <button class="btn btn-primary">${h.material_icon('save')} Save</button>
          </a>
        </div>
      </div>
      <hr/>
      <div class="row">
        <div class="col-md-12">
          <div id="qa-ractive"></div>

        </div>
      </div>
<script>
      var QAEditor = Ractive.extend({
        template: '#QAForm_template',
        onconstruct: function(options) {
            var self = this;
            self.fieldset = options['fieldset'];
        },
        oninit: function() {
            var self = this;
            self.set('errors', {});
            self.set('saving', false);
            self.set('response_type', null);
            self.set('input_type', 'radio');
            self.set('available_reponse',[]);

            self.on('submit-form', function(event) {
                self.createQA(self.get('create'));
                return false;
            });

            self.loadCategory();
        },
        loadCategory: function(callback) {
            var self = this;
            jQuery.get("${tg.url('/available_categories')}",
                    function(data) {
                self.set('categories', data['categories']);
                if (callback)
                    callback();
            });
        },
        switchResponseType: function(section) {
            var self = this;
            if(section == 'single')
                self.set('input_type', 'radio');
            if(section == 'multi')
                self.set('input_type', 'checkbox');

            self.set('response_type', section);
            self.set('available_reponse', []);
        },
        addResponse: function() {
            var self = this;
            var resp = jQuery("#response_text").val();
            if(!resp || 0 === resp.length || /^\s*$/.test(resp)) {
                alert("Risposta non valida");
                return;
            }
            jQuery("#response_text").val("");
            self.push('available_reponse', resp);
        },
        createQA: function(field) {
            var self = this;
            self.set('saving', true);

            field.fieldset = self.fieldset;
            jQuery.post("${tg.url('/manage/extra_fields')}", field).done(function(data) {
                self.set('create', {});
                self.loadCategory(function() {
                    self.set('saving', false);
                    self.set('editing', false);
                });
            }).fail(function(jqXHR) {
                var data = jQuery.parseJSON(jqXHR.responseText);
                self.set('errors', data.errors);
                self.set('saving', false);
            });
        }
    });
  </script>
  <script>
    var ractive_qa = new QAEditor({fieldset: 'qa', el: '#qa-ractive'});
    </script>
    </body>
</html>
